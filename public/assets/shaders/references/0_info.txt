----------------------------------------------------------------------------------------------------------------------------------------------------------------
glsl-lighting-walkthrough | link: http://stack.gl/glsl-lighting-walkthrough/
----------------------------------------------------------------------------------------------------------------------------------------------------------------

This article provides an overview of the various steps involved in lighting a mesh with a custom GLSL shader. 
Some of the features of the demo:

-per-pixel lighting
-flat & smooth normals
-gamma correction for working in linear space
-normal & specular maps for detail
-attenuation for point light falloff
-Oren-Nayar diffuse for rough surfaces
-Phong reflectance model for specular highlights

----------------------------------------------------------------------------------------------------------------------------------------------------------------
GAMMA CORRECTION
----------------------------------------------------------------------------------------------------------------------------------------------------------------
When dealing with PNG and JPG textures, it's important to remember that they most likely have gamma correction applied to them already,
and so we need to account for it when doing any work in linear space.

We can use pow(value, 2.2) and pow(value, 1.0 / 2.2) to convert to and from the gamma-corrected space. Or, glsl-gamma can be used for 
convenience.

    #pragma glslify: toLinear = require('glsl-gamma/in')
    #pragma glslify: toGamma  = require('glsl-gamma/out')

    vec4 textureLinear(sampler2D uTex, vec2 uv) {
    return toLinear(texture2D(uTex, uv));
    }

    void main() {
    //sample sRGB and account for gamma
    vec4 diffuseColor = textureLinear(texDiffuse, uv);

    //operate on RGB in linear space
    ...
    
    //output final color to sRGB space
    color = toGamma(color);
    }

----------------------------------------------------------------------------------------------------------------------------------------------------------------
FINAL COLOR
----------------------------------------------------------------------------------------------------------------------------------------------------------------
Our final color is going straight to the screen, so we should re-apply the gamma correction we removed earlier. If the color was going through 
a post-processing pipeline, we could continue operating in linear space until the final step.